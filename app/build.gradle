apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'

def buildVersionCode = new Date().format("yyMMddHHmm", TimeZone.getTimeZone("Europe/Istanbul")).toInteger()
def buildVersionName = "1.0.2"

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = rootProject.file('.play/knife.json')
        }
    }

    defaultConfig {
        playAccountConfig = playAccountConfigs.defaultAccountConfig
        applicationId "com.ihsanbal.knife"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode buildVersionCode
        versionName buildVersionName
        multiDexEnabled true

        manifestPlaceholders = [fabric_key: FABRIC_KEY]

        buildConfigField("String", "RSA_KEY", "\"" + RSA_KEY + "\"")
        buildConfigField("String", "TWITTER_KEY", "\"" + TWITTER_KEY + "\"")
        buildConfigField("String", "TWITTER_SECRET", "\"" + TWITTER_SECRET + "\"")
        buildConfigField("String", "ADMOB_APP_ID", "\"" + ADMOB_APP_ID + "\"")
        buildConfigField("String", "AD_UNIT_ID_INTERSTITIAL", "\"" + AD_UNIT_ID_INTERSTITIAL + "\"")
        buildConfigField("String", "AD_UNIT_ID_REWARD", "\"" + AD_UNIT_ID_REWARD + "\"")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile rootProject.file('.keystore/knife.keystore')
            storePassword "${STORE_PASSWORD}"
            keyAlias "${KEY_ALIAS}"
            keyPassword "${KEY_PASSWORD}"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            resValue "string", "ad_unit_id_banner", AD_UNIT_ID_BANNER
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "${variant.name}-release-${buildVersionName}-${buildVersionCode}.apk"
                }
            }
        }

        debug {
            applicationIdSuffix '.debug'
            resValue "string", "ad_unit_id_banner", AD_UNIT_ID_BANNER
        }
    }
    flavorDimensions "version"
    productFlavors {
        internal {
            applicationId 'com.ihsanbal.knife.internal'
            resValue "string", "app_name", '"Knife Internal"'
        }

        production {
            applicationId 'com.ihsanbal.knife'
            resValue "string", "app_name", '"Knife"'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        checkAllWarnings true
        htmlReport true
        htmlOutput file("lint-report.html")
        checkReleaseBuilds true

        disable 'MissingTranslation'
        error 'CommitTransaction'
        error 'InconsistentArrays'
        error 'Registered'
        error 'ManifestOrder'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

play {
    track = 'alpha'
}

dependencies {

    def supportVersion = "28.0.0"
    def butterKnifeVersion = "8.5.1"
    def rxVersion = "2.0.2"
    def loggerInterceptorVersion = "2.0.0"
    def paperDBVersion = "2.0"
    def svgVersion = "1.0.2"
    def firebaseCoreVersion = '16.0.8'
    def fireBasePref = '16.2.5'
    def daggerVersion = "2.10-rc2"

    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(':tweet-ui')
    api project(':tweet-composer')
    api project(':twitter-core')
    api project(':twitter')

    api "com.google.firebase:firebase-core:$firebaseCoreVersion"
    api "com.google.firebase:firebase-perf:$fireBasePref"

    api "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    api "io.reactivex.rxjava2:rxandroid:$rxVersion"
    api "io.reactivex.rxjava2:rxjava:$rxVersion"

    api "com.android.support:cardview-v7:$supportVersion"
    api "com.android.support:appcompat-v7:$supportVersion"
    api "com.android.support:design:$supportVersion"
    api "com.android.support:customtabs:$supportVersion"

    api "io.paperdb:paperdb:$paperDBVersion"
    api "com.jrummyapps:animated-svg-view:$svgVersion"
    api "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    api 'com.github.armcha:AutoLinkTextView:0.3.0'
    api 'com.bignerdranch.android:expandablerecyclerview:3.0.0-RC1'
    api 'com.android.support:multidex:1.0.3'
    api 'com.github.jkwiecien:EasyImage:1.3.1'
    api 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'

    api('com.crashlytics.sdk.android:answers:1.3.13@aar') {
        transitive = true
    }
    api('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
    api("com.github.ihsanbal:LoggingInterceptor:$loggerInterceptorVersion") {
        exclude group: 'org.json', module: 'json'
    }
    testImplementation 'junit:junit:4.12'

}

apply plugin: 'com.google.gms.google-services'
